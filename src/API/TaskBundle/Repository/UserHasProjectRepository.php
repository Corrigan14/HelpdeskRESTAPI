<?php

namespace API\TaskBundle\Repository;

use API\CoreBundle\Entity\User;
use API\TaskBundle\Entity\Project;
use Doctrine\ORM\EntityRepository;

/**
 * UserHasProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserHasProjectRepository extends EntityRepository
{
    /**
     * @param User $user
     * @param string $rule
     * @return array
     */
    public function getAllProjectEntitiesWithIdAndTitle(User $user, string $rule):array
    {
        $query = $this->createQueryBuilder('uhp')
            ->select('project.id, project.title')
            ->leftJoin('uhp.project', 'project')
            ->where('uhp.user = :user')
            ->andWhere('uhp.acl LIKE :rule')
            ->andWhere('project.is_active = :isActive')
            ->setParameters(['user' => $user, 'rule' => '%' . $rule . '%', 'isActive' => true]);

        return $query->getQuery()->getArrayResult();
    }

    /**
     * @param Project $project
     * @param string $rule
     * @return array
     */
    public function getAllUserEntitiesWithIdAndTitle(Project $project, string $rule):array
    {
        $query = $this->createQueryBuilder('uhp')
            ->select('user.id, user.username')
            ->leftJoin('uhp.user', 'user')
            ->where('uhp.project = :project')
            ->andWhere('uhp.acl LIKE :rule')
            ->andWhere('user.is_active = :isActive')
            ->setParameters(['project' => $project, 'rule' => '%' . $rule . '%', 'isActive' => true]);

        return $query->getQuery()->getArrayResult();
    }
}
